---
apiVersion: v1
kind: Namespace
metadata:
  name: example-ns
  labels:
    pod-security.kubernetes.io/enforce: restricted
    pod-security.kubernetes.io/enforce-version: v1.26
    pod-security.kubernetes.io/audit: restricted
    pod-security.kubernetes.io/audit-version: v1.26
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: example-sa
  namespace: example-ns
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: default
  namespace: example-ns
automountServiceAccountToken: false
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: example-role
  namespace: example-ns
rules:
  - apiGroups: [""]
    resources: ["namespaces", "pods", "pods/logs"]
    verbs: ["list","get","watch"]
  - apiGroups: ["batch"]
    resources: ["jobs", "cronjobs"]
    verbs: ["list","get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: example-rb
  namespace: example-ns
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: example-role
subjects:
  - kind: ServiceAccount
    name: example-sa
    namespace: example-ns
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: example-network-policy
  namespace: example-ns
spec:
  podSelector:
    matchLabels:
      app: example-app
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
      - podSelector:
          matchLabels:
            app: example-app
      ports:
        - port: 443
        - port: 80 
  egress:
---
apiVersion: v1
kind: Service
metadata:
  name: example-service
  namespace: example-ns  
spec:
  selector:
    app: example-app
  ports:
    - protocol: TCP
      port: 80 # port exposed by this service 
      targetPort: 9376 # port on which pods are listening 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: example-ns
spec:
  selector:
    matchLabels:
      app: example-app
  replicas: 3
  template:
    metadata:
      labels:
        app: example-app
    spec:
      serviceAccountName: example-sa
      # imagePullSecrets:
      # - name: pss-image-pull-secrets
      volumes:
      - name: token-volume
        secret:
          secretName: my-token
          # optional: true
      containers:
        - name: app-container
          image: nginx:1.14.2
          imagePullPolicy: Always
          # shareProcessNamespace: true # for debug, not allows in PSS restricted
          command:
            - /bin/bash
            - -c
            - "while :; do date ; cat /var/mysecrets/token ; echo ''; sleep 60 ; done"
          ports:
            - containerPort: 80
          volumeMounts:
          - name: token-volume
            mountPath: /var/mysecrets/token
            subPath: token
            readOnly: true
          securityContext:
            # Required for PSS restricted
            capabilities:
              drop: ["ALL"]
              add:
                - "NET_BIND_SERVICE" # Optional for port 80
                # - "SYS_PTRACE" # for debug, not allows in PSS restricted
            runAsNonRoot: true
            runAsUser: 10000 # Optional, must not be 0
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault # or "Localhost"

