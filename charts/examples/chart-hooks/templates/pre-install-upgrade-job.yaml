apiVersion: batch/v1
kind: Job
metadata:
  name: "pre-install-upgrade-job-{{ .Release.Name }}"
  labels:
    # app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    # app.kubernetes.io/instance: {{ .Release.Name | quote }}
    # app.kubernetes.io/version: {{ .Chart.AppVersion }}
    # helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-weight": "-5"
    # "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
    "helm.sh/hook-delete-policy": before-hook-creation
    # force-execute-random: {{ randAlphaNum 5 | quote }}
spec:
  backoffLimit: 0
  completions: 1
  parallelism: 1
  template:
    metadata:
      name: "pre-install-upgrade-pod-{{ .Release.Name }}"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
      # annotations:
      #   force-execute-random: {{ randAlphaNum 5 | quote }}
    spec:
      restartPolicy: Never
      containers:
      - name: pre-install-upgrade-container
        image: "alpine:3.3"
        # command: ["/bin/sleep","{{ default "10" .Values.sleepyTime }}"]
        command:
        - /bin/sh
        - -c
        - |
          echo "Starting pre-installation hook"
          echo "Sleeping for: {{ default "10" .Values.sleepyTime }}s"
          /bin/sleep {{ default "10" .Values.sleepyTime }}
          echo "Finish pre-installation hook"
          exit 1
